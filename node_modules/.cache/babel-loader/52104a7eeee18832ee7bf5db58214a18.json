{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"disabled\", \"component\", \"label\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from './useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/api/menu-item-unstyled/)\n */\n\n\nvar MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n\n  var children = props.children,\n      _props$disabled = props.disabled,\n      disabledProp = _props$disabled === void 0 ? false : _props$disabled,\n      component = props.component,\n      label = props.label,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useMenuItem = useMenuItem({\n    disabled: disabledProp,\n    ref: ref,\n    label: label\n  }),\n      getRootProps = _useMenuItem.getRootProps,\n      disabled = _useMenuItem.disabled,\n      focusVisible = _useMenuItem.focusVisible,\n      highlighted = _useMenuItem.highlighted;\n\n  var ownerState = _extends({}, props, {\n    disabled: disabled,\n    focusVisible: focusVisible,\n    highlighted: highlighted\n  });\n\n  var classes = getUtilityClasses(ownerState);\n  var Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'li';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default MenuItemUnstyled;","map":{"version":3,"sources":["D:/Ava/Material/material-ui-tut-lesson-2/node_modules/@mui/base/MenuItemUnstyled/MenuItemUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUnstyledUtilityClass","useMenuItem","composeClasses","useSlotProps","jsx","_jsx","getUtilityClasses","ownerState","disabled","focusVisible","slots","root","MenuItemUnstyled","forwardRef","props","ref","_ref","children","disabledProp","component","label","slotProps","other","getRootProps","highlighted","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","process","env","NODE_ENV","propTypes","node","bool","string","shape","oneOfType","func","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"component\", \"label\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from './useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});\n}\n\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/api/menu-item-unstyled/)\n */\nconst MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n  const {\n      children,\n      disabled: disabledProp = false,\n      component,\n      label,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    disabled: disabledProp,\n    ref,\n    label\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n  const classes = getUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default MenuItemUnstyled;"]},"metadata":{},"sourceType":"module"}